{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "button": false,
    "new_sheet": false,
    "run_control": {
     "read_only": false
    }
   },
   "source": [
    "<!--BOOK_INFORMATION-->\n",
    "<img align=\"left\" style=\"padding-right:10px;\" src=\"images/book_cover.jpg\" width=\"120\">\n",
    "\n",
    "*This notebook contains an excerpt from the [Python Programming and Numerical Methods - A Guide for Engineers and Scientists](https://www.elsevier.com/books/python-programming-and-numerical-methods/kong/978-0-12-819549-9), the content is also available at [Berkeley Python Numerical Methods](https://pythonnumericalmethods.berkeley.edu/notebooks/Index.html).*\n",
    "\n",
    "*The copyright of the book belongs to Elsevier. We also have this interactive book online for a better learning experience. The code is released under the [MIT license](https://opensource.org/licenses/MIT). If you find this content useful, please consider supporting the work on [Elsevier](https://www.elsevier.com/books/python-programming-and-numerical-methods/kong/978-0-12-819549-9) or [Amazon](https://www.amazon.com/Python-Programming-Numerical-Methods-Scientists/dp/0128195495/ref=sr_1_1?dchild=1&keywords=Python+Programming+and+Numerical+Methods+-+A+Guide+for+Engineers+and+Scientists&qid=1604761352&sr=8-1)!*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "button": false,
    "new_sheet": false,
    "run_control": {
     "read_only": false
    }
   },
   "source": [
    "<!--NAVIGATION-->\n",
    "< [24.1 The Basics of Waves](chapter24.01-The-Basics-of-waves.ipynb) | [Contents](Index.ipynb) | [24.3 Fast Fourier Transform (FFT)](chapter24.03-Fast-Fourier-Transform.ipynb) >"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "button": false,
    "new_sheet": false,
    "run_control": {
     "read_only": false
    }
   },
   "source": [
    "# Discrete Fourier Transform (DFT)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "button": false,
    "new_sheet": false,
    "run_control": {
     "read_only": false
    }
   },
   "source": [
    "From the previous section, we learned how we can easily characterize a wave with period/frequency, amplitude, phase. But these are easy for simple periodic signal, such as sine or cosine waves. For complicated waves, it is not easy to characterize like that. For example, the following is a relatively more complicate waves, and it is hard to say what's the frequency, amplitude of the wave, right?\n",
    "\n",
    "<img src=\"images/24.02.01-waves_with_3sine.jpg\" alt=\"Complicate waves\" title=\"A more complicate wave.\" width=\"500\"/>\n",
    "\n",
    "There are more complicated cases in real world, it would be great if we have a method that we can use to analyze the characteristics of the wave. The **Fourier Transform** can be used for this purpose, which it decompose any signal into a sum of simple sine and cosine waves that we can easily measure the frequency, amplitude and phase. The Fourier transform can be applied to continuous or discrete waves, in this chapter, we will only talk about the Discrete Fourier Transform (DFT). \n",
    "\n",
    "Using the DFT, we can compose the above signal to a series of sinusoids and each of them will have a different frequency. The following 3D figure shows the idea behind the DFT, that the above signal is actually the results of the sum of 3 different sine waves. The time domain signal, which is the above signal we saw can be transformed into a figure in the frequency domain called DFT amplitude spectrum, where the signal frequencies are showing as vertical bars. The height of the bar after normalization is the amplitude of the signal in the time domain. You can see that the 3 vertical bars are corresponding the 3 frequencies of the sine wave, which are also plotted in the figure. \n",
    "\n",
    "<img src=\"images/24.02.02-time_frequency.png\" alt=\"DFT\" title=\"Illustration of Fourier transform with time and frequency domain signal.\" width=\"500\"/>\n",
    "\n",
    "In this section, we will learn how to use DFT to compute and plot the DFT amplitude spectrum.  \n",
    "\n",
    "## DFT \n",
    "The DFT can transform a sequence of evenly spaced signal to the information about the frequency of all the  sine waves that needed to sum to the time domain signal. It is defined as:\n",
    "\n",
    "$$ X_k = \\sum_{n=0}^{N-1}{x_n\\cdot e^{-i2\\pi{kn/N}}} = \\sum_{n=0}^{N-1}{x_n[cos(2\\pi{kn/N}) -i\\cdot sin(2\\pi{kn/N})]}$$\n",
    "\n",
    "where \n",
    "\n",
    "* N = number of samples\n",
    "* n = current sample\n",
    "* k = current frequency, where $ k\\in [0,N-1]$\n",
    "* $x_n$ = the sine value at sample n\n",
    "* $X_k$ = The DFT which include information of both amplitude and phase\n",
    "\n",
    "Also, the last expression in the above equation derived from the *Euler's formula*, which links the trigonometric functions to the complex exponential function: $e^{i\\cdot x} = cosx+i\\cdot sinx$\n",
    "\n",
    "Due to the nature of the transform, $X_0 = \\sum_{n=0}^{N-1}x_n$. If $N$ is an odd number, the elements $X_1, X_2, ..., X_{(N-1)/2}$ contain the positive frequency terms and the elements $X_{(N+1)/2}, ..., X_{N-1}$ contain the negative frequency terms, in order of decreasingly negative frequency. While if $N$ is even, the elements $X_1, X_2, ..., X_{N/2-1}$ contain the positive frequency terms, and the elements $X_{N/2},...,X_{N-1}$ contain the negative frequency terms, in order of decreasingly negative frequency. In the case that our input signal $x$ is a real-valued sequence, the DFT output $X_n$ for positive frequencies is the conjugate of the values $X_n$ for negative frequencies, the spectrum will be symmetric. Therefore, usually we only plot the DFT corresponding to the positive frequencies. \n",
    "\n",
    "Note that the $X_k$ is a complex number that encodes both the amplitude and phase information of a complex sinusoidal component $e^{i\\cdot 2\\pi kn/N}$ of function $x_n$. The amplitude and phase of the signal can be calculated as:\n",
    "\n",
    "$$amp = \\frac{|X_k|}{N}= \\frac{\\sqrt{Re(X_k)^2 + Im(X_k)^2}}{N}$$\n",
    "$$phase = atan2(Im(X_k), Re(X_k))$$\n",
    "\n",
    "where $Im(X_k)$ and $Re(X_k)$ are the imagery and real part of the complex number, $atan2$ is the two-argument form of the $arctan$ function. \n",
    "\n",
    "The amplitudes returned by DFT equal to the amplitudes of the signals fed into the DFT if we normalize it by the number of sample points. Note that doing this will divide the power between the positive and negative sides, if the input signal is real-valued sequence as we described above, the spectrum of the positive and negative frequencies will be symmetric, therefore, we will only look at one side of the DFT result, and instead of divide $N$, we divide $N/2$ to get the amplitude corresponding to the time domain signal.\n",
    "\n",
    "Now that we have the basic knowledge of DFT, let's see how we can use it. \n",
    "\n",
    "**TRY IT!** Generate 3 sine waves with frequencies 1 Hz, 4 Hz, and 7 Hz, amplitudes 3, 1 and 0.5, and phase all zeros. Add this 3 sine waves together with a sampling rate 100 Hz, you will see that it is the same signal we just shown at the beginning of the section. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "plt.style.use('seaborn-poster')\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# sampling rate\n",
    "sr = 100\n",
    "# sampling interval\n",
    "ts = 1.0/sr\n",
    "t = np.arange(0,1,ts)\n",
    "\n",
    "freq = 1.\n",
    "x = 3*np.sin(2*np.pi*freq*t)\n",
    "\n",
    "freq = 4\n",
    "x += np.sin(2*np.pi*freq*t)\n",
    "\n",
    "freq = 7   \n",
    "x += 0.5* np.sin(2*np.pi*freq*t)\n",
    "\n",
    "plt.figure(figsize = (8, 6))\n",
    "plt.plot(t, x, 'r')\n",
    "plt.ylabel('Amplitude')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**TRY IT!** Write a function *DFT(x)* which takes in one argument, _x_ - input 1 dimensional real-valued signal. The function will calculate the DFT of the signal and return the DFT values. Apply this function to the signal we generated above and plot the result. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def DFT(x):\n",
    "    \"\"\"\n",
    "    Function to calculate the \n",
    "    discrete Fourier Transform \n",
    "    of a 1D real-valued signal x\n",
    "    \"\"\"\n",
    "\n",
    "    N = len(x)\n",
    "    n = np.arange(N)\n",
    "    k = n.reshape((N, 1))\n",
    "    e = np.exp(-2j * np.pi * k * n / N)\n",
    "    \n",
    "    X = np.dot(e, x)\n",
    "    \n",
    "    return X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "X = DFT(x)\n",
    "\n",
    "# calculate the frequency\n",
    "N = len(X)\n",
    "n = np.arange(N)\n",
    "T = N/sr\n",
    "freq = n/T \n",
    "\n",
    "plt.figure(figsize = (8, 6))\n",
    "plt.stem(freq, abs(X), 'b', \\\n",
    "         markerfmt=\" \", basefmt=\"-b\")\n",
    "plt.xlabel('Freq (Hz)')\n",
    "plt.ylabel('DFT Amplitude |X(freq)|')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see from here that the output of the DFT is symmetric at half of the sampling rate (you can try different sampling rate to test). This half of the sampling rate is called **Nyquist frequency** or the folding frequency, it is named after the electronic engineer Harry Nyquist. He and Claude Shannon have the Nyquist-Shannon sampling theorem, which states that a signal sampled at a rate can be fully reconstructed if it contains only frequency components below half that sampling frequency, thus the highest frequency output from the DFT is half the sampling rate. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA1gAAAGoCAYAAABbkkSYAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAIABJREFUeJzt3XuYLGV1v/37y9EooqCIgsoGiVF4RfltNMQjCAZPQIyI0cQoqImKGjwlwVOQYDTRaDzHGOMhGjWKBohRVFA0BlRARbaKIhsBxS26QUUQQdb7R9XIOPT0dO+p7p6evj/XVVdPVz1VtaZmulevrqeeSlUhSZIkSVq+zSYdgCRJkiStFhZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcssCRJkiSpI1tMOoCV6La3vW2tWbNm0mFIklpnn332j6pqh0nHMQrmHElaObrINxZYPaxZs4azzjpr0mFIklpJvjvpGEbFnCNJK0cX+cYugpIkSZLUEQssSZIkSeqIBZYkSZIkdcQCS5IkSZI6YoElSZIkSR2xwJIkSZKkjlhgSZIkSVJHLLAkSZIkqSMWWJIkSZLUkYkWWEkOSnJakh8kuTbJpUn+M8keA6y7XZJ/TfKjJD9P8qkk9xhH3JKk6WK+kSSNy6TPYG0PnA08E/h94BhgT+DMJLsstlKSACcBDwWeBTwa2BL4dJI7jjpoSdLUMd9IksZii0nuvKreB7xv/rwkXwS+CRwG/OMiqx4C3B94cFV9ul3vDGA98JfAs0cVsyRp+phvJEnjMukzWL38uH28rk+bQ4DvzyU7gKr6CXAycOgIY5MkrR7mG0lS51ZEgZVk8yRbJflt4K3AD4D391llT+C8HvPXAXdOss0mxHD23DTsuoPae2/YaafmUZI0fish37RxjDznDMscJUndmGgXwXm+AKxtf76ApivGD/u03x64qMf8je3jdsBVnUXXkQ0b4LLLJh2FJM20mcg3m8IcJUndWBFnsIAnAPsCjwd+CnwyyZo+7QPUIvM3SVWtnZs2dRuSpBVv4vkGzDmStJqtiAKrqr5RVV9oL0I+ANgG+Os+q2yk+VZxoe3axys6DlGStAqYbyRJo7YiCqz5qupKmm4bu/dpto6mX/xCewAXV9Wq6K4hSRod840kaRRWXIGVZEfgbsB3+jQ7Cdg5yYPmrbctcHC7TJKkvsw3kqRRmOggF0k+ApwDnEvTF/6uwHOA62nvSdImtVOBI6vq3e2qJwFnAO9J8gKaLhrH0PSJ/4dx/g6SpJXPfCNJGpdJjyJ4JnA48DxgK+AS4DPAK6rqorZNgM2Zd7atqm5I8kjg1cCbgZvRJMD9q+qScQUvSZoa5htJ0lhMtMCqqr8H/n6JNp+hx2hNVbUROLKdJElalPlGkjQuK+4aLEmSJEmaVhZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcssCRJkiSpIxZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcssCRJkiSpIxZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcssCRJkiSpIxZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcssCRJkiSpIxZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcssCRJkiSpIxMrsJIcluSEJN9Nck2S85O8IsktB1i3FpnuNY7YJUnTxZwjSRqXLSa47+cDFwMvBC4F9gaOBfZPct+qumGJ9d8JvHXBvG91HKMkaXUw50iSxmKSBdbBVXX5vOenJ9kIvAvYDzhtifW/V1Vnjio4SdKqYs6RJI3FxLoILkh0c77UPu48zlgkSaubOUeSNC4rbZCLB7WP3xig7dOTXJvk6iSnJXnAcnac5Oy5aTnbkSRNDXOOJKlzK6bASrIzcBzwqao6a4nm7wGeARwI/BlwG+C0JPuNNEhJ0qpgzpEkjcokr8H6tSTbACcC1wNHLNW+qp4w7+nnkpwInAccD9x/U2KoqrVzP++zzz61KduQJK185hxJ0ihN/AxWkpsBJwG7AQdV1aXDbqOqfgZ8FLh3x+FJklYRc44kadQmegYryZbACcB9gAOr6mvL2Rzgt4CSpJ7MOZKkcZhYgZVkM+C9wAHAI5Yz/G2SbYFHAF/oKDxJ0ipizpEkjcskz2C9CXgM8HLg50n2nbfs0qq6NMkuwHeA46rqOIAkzwd+B/g08H1gF5obSN4e+OMxxi9Jmh7mHEnSWEyywHpY+/iidprvZcCxNF0wNuc3rxU7H3hUO90K+CnweeDJVfXFEcYrSZpe5hxJ0lgsWmAluYHl9y+vquq5j6paM8DKF9EkvPnzTgZOXmZckqQZYs6RJI1LvzNYx+EFvJIkSZI0sEULrKo6doxxSJIkSdLUm/h9sCRJkiRptbDAkiRJkqSODDSKYJLNgQcADwL2BHaguT7rR8A64LPA56rq+hHFKUmSJEkrXt8CK8ntgKOBJwE70oyudB2wkebs162Bw2iKrR8meQfwuqraMMKYJUmSJGlFWrSLYJK/obnh4tOBjwGPBXapqq2r6g5VtWNVbU1z08XHtm2eDny7XVeSJEmSZkq/a7CeCDwXuH1VPbmqPlRVlyxsVFWXtMuOpDnL9bx2XUmSJEmaKf26CN512GuqquqXwNvaroKSJEmSNFMWPYO1nAErHOxCkiRJ0ixymHZJkiRJ6shAw7QDJLlwE7ZfVXWXTVhPkiRJkqbOwAUWcDGwM3AX4KfAhTTDtu8KbAtcAHyv6wAlSZIkaVoMU2A9H/gE8CzgX6rqOoAkWwJPA44FHldVZ3cdpCRJkiRNg2GuwXo18L6qetNccQVQVddV1RuAD7RtJEmSJGkmDVNg3Rv4Wp/lX2vbSJIkSdJMGqbA+hnwoD7L9wOuWlY0kiRJkjTFhimw3gccnuT1SdbMzUyyJskbgMPaNpIkSZI0k4YZ5OKFwO7AM4GjkvwSKGBrmtEEPwYc03mEkiRJkjQlBi6wquoa4OAkDwUOBdbQFFYXAidV1cdHEqEkSZIkTYlhzmAB0BZSFlOSJEmStMDQBVaSbYDfA24HfKqqNnQelSRJkiRNoWEGuSDJ0cD3ac5gvRvYs52/Q5Krkjyl+xAlSZIkaToMXGAl+RPgNcDngb+guf4KgKq6HDgFeHTXAUqSJEnStBjmDNZzgVOr6mH0Ho79bNozWpIkSZI0i4YpsO4OfKTP8g0012VJkiRJ0kwapsC6BrhZn+VrgCuXFY0kSZIkTbFhCqwzgcf0WtCOLPgk4LMdxCRJkiRJU2mYAuvlwNokJwEHtPPunuQJwBeBHYBXdByfJEmSJE2Nge+DVVWfT3I48C/AI9rZr6cZTXAjcHhVfbn7ECVJkiRpOgx1o+Gq+q8kHwceAtyN5gzYt4FTqurnI4hPkiRJkqbGQAVWkq2BxwLnV9UXgJPbSZIkSZLUGugarKq6FvhX4F6jDUeSJEmSptcwg1xcCGw/qkAkSZIkadoNU2C9HnhKku1GFYwkSZIkTbOhBrkArgIuSPJ+mjNa1yxsUFVv7iIwSZIkSZo2wxRYb5z389MXaVOABZYkSZKkmTRMgbX/yKKQJEmSpFVg0QIryUuBD1fVee2s9cDlVXWTboGSJEmSpP6DXBwL7DXv+XrgUSONRpIkSZKmWL8C6wpgh3nP0+WOkxyW5IQk301yTZLzk7wiyS0HWPdmSV6V5LJ23TOSPLDL+CRJq4c5R5I0Lv2uwfoi8OIkuwBXtvP+MMnufdapqvrbAff9fOBi4IXApcDeNGfN9k9y36q6oc+6bwceAbyAZjTDo4BTkvxeVX1lwP1LkmaHOUeSNBb9CqxnA+8Hjm6fF/CH7bSYAgYtsA6uqsvnPT89yUbgXcB+wGm9VkpyT+DxwJFV9Y523unAOuA44JAB9y9Jmh3mHEnSWCxaYFXVt4G1SbYHbg+cB/w18NEudrwg0c35Uvu4c59VDwGuAz4wb1vXt/fm+uskW1fVtV3EKElaHcw5kqRxWXKY9qraCGxM8i7g9KpaN8J4HtQ+fqNPmz2B9VV19YL564CtgN3bnyVJ6secI0nqXL9BLn5DVR1RVV8YVSBJdqbpbvGpqjqrT9PtaQbgWGjjvOWbsv+z56ZNWV+SND3MOZKkUVm0wEpy8KZuNMlQfdKTbAOcCFwPHLFUc5prvXrNlySpL3OOJGmU+p3B+kCSs5L8aZuM+kqybZIj2m/j3jdoAEluBpwE7AYcVFWXLrHKRnp/Y7jdvOVDq6q1c9OmrC9JWvnMOZKkUet3DdbdgL8D3gG8JcnnaS4IvpCmu0RoEszuwH2AfWn6o/8H8AeD7DzJlsAJ7foHVtXXBlhtHfCoJDdf0Cd+D+CXwAWD7FuSNFvMOZKkceg3iuDFwJ8keQnwVOAw4MC5xe3jXBeJ84F/BP61qr47yI6TbAa8FzgAeERVnTlgzCcBLwMeQzO8Lkm2AB4LfMLRnCRJC5lzJEnjMsgogutpbsz4wiQ7AncHdqApsi4Hvr7I8LdLeRNNwno58PMk+85bdmlVXdre5Pg7wHFVdVwbz1eSfAD4p/bbyPXA04FdgT/ehDgkSaufOUeSNBZLFljzVdUGYENH+35Y+/iidprvZcCxNGfINuem14odQZMkjwduDXwVeGhVndNRbJKk1cWcI0kai74FVpLbVdUPB91YkodX1f8M0raq1gzQ5iJ6jNRUVdcAz20nSZL6MudIksZlqftgfT3Jkl0gkmyf5D3Ayd2EJUmSJEnTZ6kC6zLg3UlOSrJTrwZJDge+DvwR8PqO45MkSZKkqbFUgfX/aIZqfyhwXpInzS1Icock/0Vzz6sfA/evqueMKlBJkiRJWun6FlhVdV1VvQT4XeBi4O1JPpbkWTT3Bnk48Apg7yGGvJUkSZKkVWmgUQSr6stJ9gHeCPwZ8Ps09756XFV9dYTxSZIkSdLUWKqL4HxH0FxndS3wM2ANcFB780ZJkiRJmnlLFkdJdknySeCtwDdprsvaE/gM8ErgzCR7jjJISZIkSZoGfQusJM8AvgbcD/hL4L5V9Y2q+l5VPRw4EtgdODvJS5JsPvKIJUmSJGmFWuoM1huBc4F7VdWrq+qG+Qur6p3AHsApwMuAs0YRpCRJkiRNg6UKrOcAD6iqby3WoKp+UFWHAk8A7thlcJIkSZI0TZYapv11VVWDbKiq3ktzNkuSJEmSZlKnIwBW1eVdbk+SJEmSpolDrEuSJElSRxa90XCS9cBA3QP7qKq6yzK3IUmSJElTYdECCzid5RdYkiRJkjQzFi2wqupJY4xDkiRJkqae12BJkiRJUkcssCRJkiSpIxZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHRm6wEqyX5KXJ3lbkru187ZJct8kt+o+REmSJEmaDgMXWEm2TPIR4FTgGOBIYKd28fXAycBRnUcoSZIkSVNimDNYLwEOAV4ErAUyt6CqfgGcABzcaXSSJEmSNEWGKbD+GHhHVb0SuLjH8m8Cu3USlSRJkiRNoWEKrDsCZ/ZZfhXgNViSJEmSZtYwBdaPufGaq17uAXxveeFIkiRJ0vQapsD6OPCUJLdeuCDJnjSDXny0q8AkSZIkadoMU2D9DbA18FXgpUABj0vyduBLwJXAyzuPUJIkSZKmxMAFVlVdAuwLnEczHHuAJwNPAj4L3L+qNowgRkmSJEmaClsM07iq1gOPaG8ofFeaAu07VfWjUQQnSZIkSdNkqAJrTlX9hKZboCRJkiSptWiBleTOm7LBqup1jyxJkiRJWvX6ncG6iGYgi2FtvmmhSJIkSdJ061dgHcdNC6xDgb2ATwLfoBno4u7AgTSjC540ghglSZIkaSosWmBV1bHznyf5E+DOwN5V9bUFy+4JnApcMIIYJUmSJGkqDHMfrL8C3rCwuAKoqq8CbwKO6SowSZIkSZo2wxRYuwNX9Fn+Y+AuywtHkiRJkqbXMAXWJcAfJdly4YJ23uPbNpIkSZI0k4YpsP4J2Bf4vyRPTLJvOz0JOAO4d9tmYEnumOQNSc5IcnWSSrJmwHUvatsvnP5gmBgkSauf+UaSNC4D32i4qt6c5ObAy4B/m7cowC+AY6rqzUPuf3fgcOBs4HPA7w+5/inAsQvmnT/kNiRJq5/5RpI0FgMXWABV9eok/0qTmHalKa4uBD5ZVf2uz1rMZ6tqR4AkT2H4hPejqjpzE/YrSZot5htJ0lgMVWABVNWVwH92sfOquqGL7UiS1I/5RpI0LsNcg7USHdz2pb82yZn2h5ckjYj5RpI0kIHPYCW5cIBmVVXjGqr9ZOBLwHpgR+CZwEeSPKGq3jPsxpKcPffz2rVrOwtSkjT1Os03YM6RpNVsmC6CFwO1YN7mNNdi7QxcAHyvo7iWVFXPmv88yUeAM4FXAJuU8CRJWsh8I0kaxsBdBKtqv6raf8H0wKq6E/BHwC2Bo0YW6dLx/Qr4IHDHJHfYhPXXzk3dRydJWi2Wm2/abZhzJGmV6uQarKr6T5pk85outrcMaR8XnmmTJKlL5htJUk9dDnJxHnC/Drc3lCRbAI8BLq6qH0wqDknS6ma+kST1M/Qw7X3cH/jlsCslOaz9ca6bxMOSXA5cXlWnt22uB95VVU9unz8OOBT4H+ASmouOj2q38bjl/BKSpNXJfCNJGodhRhH800UWbQc8GHgk8K5NiOGDC56/uX08Hdiv/XnzdpqzHrgd8Cpge+BqmhGeHlpVp2xCDJKk1c98I0kauWHOYL2Tpq95eiy7vl1+9LABVFWv7fVtU1Vn0hR1kiQNxHwjSRqHYQqs/XvMK+AKYH1VXdVNSJIkSZI0nQYusOb6p0uSJEmSeht4FMEkFyY5pM/yRya5sJuwJEmSJGn6DDNM+xpgmz7LbwHssqxoJEmSJGmKdXkfrDsBXoclSZIkaWb1vQYryaE09/+Y82dJDuzRdDvgQODMDmOTJEmSpKmy1CAX9wKe1P5cwAPbaaGraIqrozqLTJIkSZKmTN8uglX1sqrarKo2o7n/1Z/MPV8wbVtVD6mqb40nbEmSJElaeYa5D9auwOWjCkSSJEmSpt0w98H67igDkSRJkqRpt2iBleQ0muuuDqqq69vnS6mqOqCz6CRJkiRpivQ7g7UbcAPNtVdzz2vkEUmSJEnSlFq0wKqqNf2eS5IkSZJ+U5c3GpYkSZKkmWaBJUmSJEkd6TfIxYWbsL2qqrssIx5JkiRJmlr9Brm4GAe1kCRJkqSB9RvkYr8xxiFJkiRJU89rsCRJkiSpI/26CPaU5K7AIcCu7az1wMlVdX6XgUmSJEnStBm4wEqyGfBa4Chueubr75O8GXh2VXndliRJkqSZNEwXwRcDzwL+BzgAuGM7HdjOewbwkq4DlCRJkqRpMUwXwacAp1TVIQvmfx84LckpbZvjugpOkiRJkqbJMGewbguc3Gf5iW0bSZIkSZpJwxRY53HjwBa97Na2kSRJkqSZNEyBdQzw1CR/uHBBksNougf+dVeBSZIkSdK0GeYarD8Hvgd8MMnFwNyw7L8D3Bn4BvC0JE+bt05V1WM7iVSSJEmSVrhhCqzD5v28SzvNt0c7zeeQ7ZIkSZJmxsAFVlUN051QkiRJkmaORZMkSZIkdcQCS5IkSZI6Msw1WCTZh2awi92B7YEsaFJVdc+OYpMkSZKkqTJwgZXkKcBbaQauuAy4slezjuKSJEmSpKkzzBmsFwNfBw6uqotGE44kSZIkTa9hrsHaAfhniytJkiRJ6m2YAutc4DajCkSSJEmSpt0wBdaLgKOS7DmqYCRJkiRpmg1zo+HTkjwdOCfJ/wEXA7+6abN6cpcBSpIkSdK0GGYUwQcA7wS2BB60SLMCLLAkSZIkzaRhRhH8J+Ba4EjgDHoP0y5JkiRJM2uYAuvuwEur6kOjCkaSJEmSptkwg1xc3PXOk9wxyRuSnJHk6iSVZM2A626W5JgkFyX5RZKvJnl01zFKkqaf+UaSNC7DFFivAZ6cZJsO9787cDhwBfC5Idf9W+BY4I3Aw4AzgQ8meXiH8UmSVgfzjSRpLIbpIrgF8HPgW0neS+9RBKmqNw+xzc9W1Y4ASZ4C/P4gKyW5HfB84JVV9ep29qeT7A68EvifIWKQJK1+5htJ0lgMU2C9cd7Pz1ukTQEDF1hVdcMQ+5/vIGAr4D0L5r8H+Lcku1bV+k3ctiRplTHfSJLGZZgCa/+RRTG8PWlGNLxgwfx17eMewFAJL8nZcz+vXbt2WcGNy957w4YNsOOO8OUvTzoaSVqVOs83MJ05RyuLnwGklWuYGw2fPspAhrQ9cGVV1YL5G+ctX/U2bIDLLpt0FJK0qplvtCL5GUBauYYZ5GJRSXZI8pwkX+lie4PskqY7Yq/5m6Sq1s5Nmx6WJGmV6TzfgDlHklazYboI/oYkWwCPBJ5EM6rSlsCPuglrSRuB7ZJkwbeK281bLknScplvJElDGfoMVpJ7Jnkt8H3gBGAt8C/AAcAdug1vUeuArYG7LJi/R/v49THFIUla3cw3kqShDFRgJblNkmcn+TJwDvAUmvuAABxVVc+qqk9X1U2GbR+RjwO/BP54wfw/Ac5zRCdJUkfMN5KkofTtIpjkYOAI4OFt21OBJwIfBm5H00VwWZIc1v441w/9YUkuBy6fG1gjyfXAu6rqyQBV9cP2LNoxSX5GU/Q9FngwcOhyY5IkrT7mG0nSOCx1DdaJNMPPvgj4j6r69Xg1SXpd9LspPrjg+dx9tE4H9mt/3ryd5nsRcBXwF8DtgfOBw6vq5I7ikiStLuYbSdLILVVgXQvsQnOjxQ1JPlxVV3cZQFUtORJTrzZtd8Tj20mSpL7MN5KkcVjqGqzbA88CtgXeTVNkvSvJgdz0Gz5JkiRJmml9C6yq+klVvaWq9qW5m/1bgAOBU4Av0dwbZKeRRylJkiRJU2DgYdqr6htV9ZfAnYCDgdNoRlZ6U5KLkrwmyQNHFKckSZIkrXhD3werqm6oqv+pqsfQ3Pfq2cDlwNHApzuOT5IkSZKmxtAF1nxVdWVVvamq7g3cA3hNN2FJkiRJ0vRZahTBgVXVOuAFXW1PkiRJkqbNss5gSZIkSZJuZIElSZIkSR2xwJIkSZKkjlhgSZIkSVJH+hZYSV6a5P8bVzCSJEmSNM2WOoN1LLDXGOKQJEmSpKlnF0FJkiRJ6ogFliRJkiR1ZJACq0YehSRJkiStAlsM0Oafkrx8wO1VVd1lOQFJkiRJ0rQapMBKOw1i0HaSJEmStOoMUmAdXVX/MfJIJEmSJGnKOciFJEmSJHXEAkuSJEmSOmKBJUmSJEkdWarAOgL4v3EEIkmSJEnTbqkCa0/g1uMIRJIkSZKm3VIF1vOBPeaeJLlNkl8lefBow5IkSZKk6bMp12B5rytJkiRJ6sFBLiRJkiSpIxZYkiRJktSRQQqsGnCeJEmSJM20LQZo889JXtf+PHf91YeTXNejbVXVjt2EJkmSJEnTZakC67N4tkqSJEmSBtK3wKqq/cYUhyRJkiRNPQe5kCRJkqSODHINFgBJbg7cH7grcEvgZ8C3gP+tqqtHE54kSZIkTY+BCqwkxwB/RVNYQTPYxdy1WT9L8vdV9YoRxCdJkiRJU2PJAivJ64FnAj8B3gWcS3P26pbAPYE/AI5Pcvuq+osRxipJkiRJK1rfAivJWpri6pPA4VX1kx5tjgY+ADwzybur6uyRRCpJkiRJK9xSg1wcAVwBPKZXcQXQzj+8bfekTqOTJEmSpCmyVIH1e8AJVfXTfo3a5ScA9+0qMEmSJEmaNksVWLsAXx1wW+cCa5YVjSRJkiRNsaUKrFsBVw64rZ9w4yiDkiRJkjRzliqwNufG4diXUm17SZIkSZpJg9wH6yFJbj1Au/sMu/MkdwJeCzyE5t5anwKOrqqLB1h3scJv76r6yrCxSJJWN3OOJGkcBimwnthOgxj0bBdJbg6cBlzbbr+A44FPJ9mrqn4+wGbeCbx1wbxvDRqDJGk2mHMkSeOyVIG1/wj3/VRgN+B3quoCgCTnAt8G/hx4zQDb+F5VnTm6ECVJq4Q5R5I0Fn0LrKo6fYT7PgQ4cy7Rtftbn+TzwKEMluwkSRqEOUeSNBZLDXIxSnsC5/WYvw7YY8BtPD3JtUmuTnJakgdsajBJzp6bNnUb027vvWGnnZpHSVplzDmSJsLPV7NnkGuwRmV74Ioe8zcC2w2w/nuA/wa+T3O/rhcApyV5SFV9pqsgZ8mGDXDZZZOOQpJGwpwjaSL8fDV7JllgQe9BMTLQilVPmPf0c0lOpPl28njg/kMHUrV27ud99tln4ME6JElTw5wjSRq5SXYRvILmG8WFtqP3t4x9VdXPgI8C915mXJKk1cecI0kai0kWWOto+sQvtAfw9U3cZhhiqHhJ0sww50iSxmKSBdZJwL5JdpubkWQNcL922VCSbAs8AvhCR/FJklYPc44kaSwmWWC9DbgIODHJoUkOAU4ELmHejRyT7JLk+iQvnTfv+UneluTxSfZL8kTg88DtgReP9beQJE0Dc44kaSwmNshFVf08yYOB1wL/TtPV4lTg6Kq6al7TAJvzm8Xg+cCj2ulWwE9pkt2Tq+qLYwhfkjRFzDmSpHGZ6CiCVXUx8Ogl2lzEglGequpk4OTRRSZJWm3MOZKkcZhkF0FJkiRJWlUssCRJkiSpIxZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcssCRJkiSpIxZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcssCRJkiSpIxZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGARXp4gAAARmklEQVRJkiRJUkcssCRJkiSpIxZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcssCRJkiSpIxZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcmWmAluVOSDyX5SZKfJvlwkjsPuO7NkrwqyWVJrklyRpIHjjpmSdJ0MudIksZhYgVWkpsDpwF3A54IPAH4beDTSW4xwCbeDjwVeCnwSOAy4JQk9xpNxJKkaWXOkSSNyxYT3PdTgd2A36mqCwCSnAt8G/hz4DWLrZjknsDjgSOr6h3tvNOBdcBxwCGjDV2SNGXMOZKksZhkF8FDgDPnEh1AVa0HPg8cOsC61wEfmLfu9cD7gYOSbN19uJKkKWbOkSSNxSTPYO0JnNhj/jrgMQOsu76qru6x7lbA7u3PA0ty9tzPa9euHWbVm9h7b9iw4abz5+Zt2AA77bSsXUzF9iRpvh13hC9/eWK7X7E5Z8st166I91xzwHTx7zU9/FvNnkkWWNsDV/SYvxHYbhnrzi2fmA0b4LLLFl9+ww39lw9rpW9PklaAFZtzrrtuZb3nmgOmi3+v6eHfanZMssACqB7zMsB6Wca6vQOp+vVpq3322afXtge24469519+efPi2mwz2GGH5exhOrYnSfMt9t44Risy52y11T5129tu6pa6Yw6YLv69pod/q+nSRRE8yQLrCnp/67cdvb8pnG8j0Gto3e3mLZ+YCXaBkST1tmJzzl57wVlnLWcLkqSuZJO/OrvRJAe5WEfTr32hPYCvD7Duru2wuwvX/SVwwU1XkSTNMHOOJGksJllgnQTsm2S3uRlJ1gD3a5ctte6WzLswOckWwGOBT1TVtV0HK0maauYcSdJYTLLAehtwEXBikkOTHEIzwtMlwFvnGiXZJcn1SV46N6+qvkIzXO4/JXlKkgNohsvdFfibMf4OkqTpYM6RJI3FxAqsqvo58GDgW8C/A+8F1gMPrqqr5jUNsDk3jfUI4B3A8cBHgTsBD62qc0YcuiRpyphzJEnjMtFRBKvqYuDRS7S5iB4jNVXVNcBz20mSpL7MOZKkcZhkF0FJkiRJWlUssCRJkiSpIxZYkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOpKomHcOKk+Ry4LvL2MTd28dvdBDONPM4NDwON/JYNDwONxr0WOxSVTuMOphxS3I2sBfw1UnHsgL5OunP47M4j01/Hp/F3R3Yqqq2XM5GtugomFVluUm8TZhU1T7dRDSdPA4Nj8ONPBYNj8ONPBYAnDvjv39P/m/05/FZnMemP4/P4uaOzXLZRVCSJEmSOmKBJUmSJEkd8RosSZIkSeqIZ7AkSZIkqSMWWJIkSZLUEQssSZIkSeqIBZYkSZIkdcQCS5IkSZI6YoElSZIkSR2xwJIkSZKkjlhgSZIkSVJHLLAkSZIkqSMWWJIkSZLUEQssSZIkSeqIBVaHktwpyYeS/CTJT5N8OMmdJx3XKCW5Y5I3JDkjydVJKsmaHu1uluRVSS5Lck3b/oHjj7h7SQ5LckKS77a/2/lJXpHklgvabZfkX5P8KMnPk3wqyT0mFfcoJDkoyWlJfpDk2iSXJvnPJHssaDeLr5WPt6+P4xfMX9X/F0n2a3/vhdOVC9qt6uOw0Cy+BgYx6PupGou9r8yyJA9P8tkkV7WvrbOSPHjSca0ESe6X5BNJftgem3OSHDnpuMZtHJ9dLbA6kuTmwGnA3YAnAk8Afhv4dJJbTDK2EdsdOBy4Avhcn3ZvB54KvBR4JHAZcEqSe408wtF7PvAr4IXAQ4G3AE8HPplkM4AkAU5qlz8LeDSwJc3/xx0nEfSIbA+cDTwT+H3gGGBP4Mwku8BsvlaSPA64Z4/5s/J/AfBs4PfmTQfOLZix4zCTr4EhLPl+qsZi7yuzLMmfAyfS5KFHAY8BPgjcfJJxrQRJ9gI+RfPe+lSa99kvAW9P8vRJxjYBo//sWlVOHUzAX9Akhd3nzdsVuB547qTjG+Hvvdm8n58CFLBmQZt7tvOPmDdvC+B84KRJ/w4dHIMdesz70/Z3fnD7/ND2+f7z2twK2Ai8ftK/w4iPz++0v/vz2ucz9VoBbg38AHhcexyOn7ds1f9fAPu1v+OBfdqs+uOw4PedqdfAkMdmyfdTp/7vK7M6AWuAa4CjJx3LSpyAvwN+CWyzYP6ZwBmTjm/Mx2Lkn139Nqg7hwBnVtUFczOqaj3weZoPD6tSVd0wQLNDgOuAD8xb73rg/cBBSbYeUXhjUVWX95j9pfZx5/bxEOD7VfXpeev9BDiZVfz/0fpx+3hd+zhrr5V/ANZV1ft6LJvl/4v5Zu04zNprYGADvp+q//vKrDoSuAH450kHskJtRZOHr1kw/0pmrEfbOD67ztQBHbE9gfN6zF8H7NFj/izZE1hfVVcvmL+O5gW/+/hDGrkHtY/faB/7/X/cOck2Y4lqTJJsnmSrJL8NvJXmm9b3t4tn5rWS5P40374/Y5Ems/R/8d4kv0ry4yT/seB6o1k6DjBDr4GOLHw/nWkDvK/MqvsD3wT+KMl3klyf5IIkR006sBXine3j65PslOTWSZ4KHAC8dnJhrVjL+uy6xaiimkHb0/TlXGgjsN2YY1lp+h2bueWrRpKdgeOAT1XVWe3s7YGLejSfOwbbAVeNPrqx+QKwtv35ApquPT9sn8/EayXJljTF5aur6vxFms3C/8VPgH8ETgd+CuxNc33NGUn2bv8vZuE4zDcTr4EuLPJ+OrMGfF+ZVTu106to3mO+Q3MN1huTbFFVr5tkcJNWVecl2Q/4CDcW59cBT6uq9y+64uxa1mdXC6xuVY95GXsUK0+YkWPTftN+Is21FEfMX8SMHIPWE4Btgd1oLlr/ZJL7V9VF7fJZOBZ/BfwW8PI+bVb9/0VVfRn48rxZpyf5LPBFmoEvXswMHIceZu33HVqf99NZNsj7yqzaDLgl8KSq+nA777R2dLhjkry+2gtpZlHbo+QEmjMwT6PpKngo8M9JflFV751kfCvQsvKSBVZ3rqB3NbsdvSvgWbIR6DX88Hbzlk+9JDejGQltN+BBVXXpvMUbWfz/A1bZ/0hVzXXl+UKSj9Gcnfhrmjf1Vf9aabu/vYjm4tmtF/TV3jrJrYGfMWP/F3Oq6pwk3wLu3c6ateOw6l8Dy7XE++lMGvR9pap+NZEAJ+/HNKNxfnLB/E/QjEh5B+D74w5qBfk7mjNWj6yquWuiT01yG+B1Sd434LVJs2JZn129Bqs762j6ay60B/D1Mcey0qwDdm2HJp5vD5oRbS646SrTpe22cQJwH+DhVfW1BU36/X9cXFWrqfvTb6iqK2n+xnP9lWfhtbIbcDPgPTQfmOcmaM7oXQHcgxn+v+A3vx2cteMwC6+BTTbA++msGvR9ZVatW2T+3BmHWS8e7gF8dV5xNeeLwG2A240/pBVtWZ9dLbC6cxKwb5Ld5ma0p6Xv1y6bZSfR3HfhMXMzkmwBPBb4RFVdO6nAutDem+W9NBeKHlpVZ/ZodhKwc5IHzVtvW+BgVvn/R5Idae7385121iy8Vr4C7N9jgubD0f40b84z+X+RZB/grjTX6sHsHYdZeA1skgHfT2fVoO8rs+oj7eNBC+YfBFxaVT8YczwrzQ+AeyXZasH83wV+wSrpTdShZX12zQx3R+1Ue3PIr9L0aX0xzTezf0vTH3ivVfgN7K8lOaz98QCaLmDPAC4HLq+q09s276d5k3sBsJ7mxpGPBO5bVeeMPegOJXkLze/9cuC/Fyy+tKoubT80/C9wJ5pjcAXNTXj3Au5ZVZeMMeSRSfIR4BzgXJoBDe4KPAe4PXCfqvrWjL9WCnh5Vb24fb7q/y+SvJfmNX8OzXDAe9P8jlcD/6+qfjQLx2G+WX4NLGWQ99PxR7WyLXxfmVXtDctPpbl/0YuAC4HDaG4Ue0RVvXNy0U1e+1ntgzRdJt9M8/5zCHAU8Nqqeu4Ewxu7kX92nfTNvlbTRNNX8wSaD5Y/A/6LBTcuW40TzYeDXtNn5rX5LeA1NN+g/ILmm+v9Jh17R7//RX2OwbHz2m0P/BvNt0RX0yaCScff8bH4K+Bsmg/SV9PckO+tC18HM/5aOX7BvFX9f0FTKJ1LM5rgdcAlwL8Ad5il49DjuMzka2CA4zLQ+6nTbxwzbzR847HYFngTsIGmG9e5wOMnHddKmYCHAZ+hKSR+RnNW9BnA5pOObQLHYqSfXT2DJUmSJEkd8RosSZIkSeqIBZYkSZIkdcQCS5IkSZI6YoElSZIkSR2xwJIkSZKkjlhgSZIkSVJHLLCkGZZk1yTXJnnEGPa1VZKLk7xk1PuSJK0s5hvNEgssaZmS7Jek+kzbTDrGPl4BnFtVH52bkeTANu6n9Vohyb3a5S8eZkdV9UvglcALktxuWVFL0gwy3wzGfKNJ22LSAUiryLuBT/aY/4txBzKIJLsDhwNPHONu3wH8PfBsYKiEKUn6NfPN0sw3mhgLLKk7X6qq9wyzQpLNgK2qahJJ8c+Aa4CPjGuHVXVNko8ARyY5tqquH9e+JWkVMd8swXyjSbKLoDQm87tCJHlWkvOBa4HD5rV5QJKPJ7kyyTVJzkny+B7bukWS1yf5YZKfJzk9yf9L8r9JLhgwpMcAn6uqqzr43f63T5eVTy1o/jHgDsB9l7tfSdJNmW9+zXyjifAMltSdWyS57YJ5V1fV1QvmPQPYBng7sBH4NkCSw4D3A18Cjqfp6vFo4L1JbltVr5+3jQ8BDwU+AHwWuCfwKeBK4IalAk1yR2AN0O8b0F6/D8Cte8w7DljYz30tcDSwYcH8L7SPD6KJXZI0HPPNbzLfaGWpKicnp2VMwH5ALTIdO6/dge28HwPbL9jGLdr5Jy6YH5pE9lNgm3beI9vtvG5B2+e08y8YIOaHtG2P6LHsQBb/feZPL+6z/Z2B7wEXALfp8Tv9Cnj/pP92Tk5OTtM0mW96bt9847TiJs9gSd15I3DignkX9mj3vqrauGDeQcD2wL/3+Bbvv4EDgN8FTgUObef/44J2bwH+dsBYd2gfr+jT5nXtvhe6C/DPi62U5ObAyTRJ/ICq+vH85VVVSa6YF4MkaTjmG8w3WrkssKTunF9VC/t/9/KdHvPu1j5+sM96c10idgWuqaqL5y+sql8kWQ/81gAxVPuYPm2+2ev3SfKjxVZIEppuIHsBj6iqby7SdLN5MUiShmO+Md9oBbPAksbvmh7z5gaceSZw/iLrndc+hsWTRb8ENt/l7eN2A7Yf1CuARwHPqqpTejVok+KtgEUTpySpE+Yb840mwAJLWhm+3T5eOcC3khcCD05y5/nfKibZmuZC4h8MsL+vt4+7DxvoYpI8Efgr4C1V9cY+TXelSfDrutq3JGlg5htpxBymXVoZPkYzItMLk2yzcOGCO9Gf1D4+b0GzZ9D0Q19SVX2fpuvIfYYP9aaSPAD4F5o++89eovnvto+O6CRJ42e+kUbMM1jSClBVP03yZJphc7+R5J3Ad4EdaYafPRDYtm3+38AngGcn2RE4nWbY3MOB9UPs9kPtNm5ZVT/b1Njbm1d+uH36X8AfNb0yfu2yqjp13vOH0Xzr+flN3ackadOYb6TRs8CSVoiq+nCS+wHHAE+j6Tf+Q5q+8M+b166SPBp4JfBY4GDgLJqhcF8H3H7AXb4N+EvgD4F3LSP0zYC5kaje0GP5qe1Ekt8C/gB4Q1Vdv4x9SpI2kflGGq1UObCKtFok+V/g9lU1UF/3JO8Dfruq9hltZL/e39OBfwB2r6qFN4SUJE0J8420OK/BkmbbC4F7JHnkqHeUZCuab0tfZbKTpJljvtHMsIugNMOqaj2w9Zj29UvgzuPYlyRpZTHfaJZ4BkuSJEmSOuI1WJIkSZLUEc9gSZIkSVJHLLAkSZIkqSMWWJIkSZLUEQssSZIkSeqIBZYkSZIkdeT/Bz9z7UU0HBd+AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 864x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "n_oneside = N//2\n",
    "# get the one side frequency\n",
    "f_oneside = freq[:n_oneside]\n",
    "\n",
    "# normalize the amplitude\n",
    "X_oneside =X[:n_oneside]/n_oneside\n",
    "\n",
    "plt.figure(figsize = (12, 6))\n",
    "plt.subplot(121)\n",
    "plt.stem(f_oneside, abs(X_oneside), 'b', \\\n",
    "         markerfmt=\" \", basefmt=\"-b\")\n",
    "plt.xlabel('Freq (Hz)')\n",
    "plt.ylabel('DFT Amplitude |X(freq)|')\n",
    "\n",
    "plt.subplot(122)\n",
    "plt.stem(f_oneside, abs(X_oneside), 'b', \\\n",
    "         markerfmt=\" \", basefmt=\"-b\")\n",
    "plt.xlabel('Freq (Hz)')\n",
    "plt.xlim(0, 10)\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see by plotting the first half of the DFT results, we can see 3 clear peaks at frequency 1 Hz, 4 Hz, and 7 Hz, with amplitude 3, 1, 0.5 as expected. This is how we can use the DFT to analyze an arbitrary signal by decomposing it to simple sine waves.   "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The inverse DFT\n",
    "\n",
    "Of course, we can do the inverse transform of the DFT easily. \n",
    "\n",
    "$$ x_n = \\frac{1}{N}\\sum_{k=0}^{N-1}{X_k\\cdot e^{i\\cdot 2\\pi{kn/N}}}$$\n",
    "\n",
    "We will leave this as an exercise for you to write a function. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The limit of DFT\n",
    "\n",
    "The main issue with the above DFT implementation is that it is not efficient if we have a signal with many data points. It may take a long time to compute the DFT if the signal is large.\n",
    "\n",
    "**TRY IT** Write a function to generate a simple signal with different sampling rate, and see the difference of computing time by varying the sampling rate. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "def gen_sig(sr):\n",
    "    '''\n",
    "    function to generate\n",
    "    a simple 1D signal with\n",
    "    different sampling rate\n",
    "    '''\n",
    "    ts = 1.0/sr\n",
    "    t = np.arange(0,1,ts)\n",
    "\n",
    "    freq = 1.\n",
    "    x = 3*np.sin(2*np.pi*freq*t)\n",
    "    return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "120 ms Â± 8.27 ms per loop (mean Â± std. dev. of 7 runs, 10 loops each)\n"
     ]
    }
   ],
   "source": [
    "# sampling rate =2000\n",
    "sr = 2000\n",
    "%timeit DFT(gen_sig(sr))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15.9 s Â± 1.51 s per loop (mean Â± std. dev. of 7 runs, 1 loop each)\n"
     ]
    }
   ],
   "source": [
    "# sampling rate 20000\n",
    "sr = 20000\n",
    "%timeit DFT(gen_sig(sr))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that, with the number of data points increasing, we can use a lot of computation time with this DFT. Luckily, the Fast Fourier Transform (FFT) was popularized by Cooley and Tukey in their [1965 paper](http://www.ams.org/journals/mcom/1965-19-090/S0025-5718-1965-0178586-1/) that solve this problem efficiently, which will be the topic for the next section. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "button": false,
    "new_sheet": false,
    "run_control": {
     "read_only": false
    }
   },
   "source": [
    "<!--NAVIGATION-->\n",
    "< [24.1 The Basics of Waves](chapter24.01-The-Basics-of-waves.ipynb) | [Contents](Index.ipynb) | [24.3 Fast Fourier Transform (FFT)](chapter24.03-Fast-Fourier-Transform.ipynb) >"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}